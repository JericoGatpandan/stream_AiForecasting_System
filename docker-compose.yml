version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: stream_ai_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: weather_app
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: appuser
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stream_ai_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_USER=appuser
      - DB_PASSWORD=password
      - DB_NAME=weather_app
      - PORT=5500
    ports:
      - "5500:5500"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stream_ai_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge